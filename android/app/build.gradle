buildscript {
    repositories {
        google()
        mavenCentral() // Replace jcenter with mavenCentral
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.2'// Update Gradle version based on latest Flutter documentation
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.21" // Update Kotlin plugin to latest compatible version
        classpath 'com.google.gms:google-services:4.4.0'
        classpath "dev.flutter:flutter-gradle-plugin:6.7.2" // Update Flutter plugin to latest compatible version
    }
}

plugins {
    id 'com.android.application' version '7.4.2' // Apply Android application plugin
    id 'kotlin-android' version '1.7.21' // Apply Kotlin Android plugin
    id "org.jetbrains.kotlin.android" // Apply Kotlin plugin (redundant in newer Gradle versions)
    id "dev.flutter.flutter-gradle-plugin"

    id 'com.google.gms.google-services' version '4.4.1' apply false

}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    compileSdkVersion 33 // Adjust to your needs (consider latest supported version)
    buildToolsVersion "33.0.3" // Adjust to your needs

    defaultConfig {
        applicationId "com.example.healthifyd"
        minSdkVersion flutter.minSdkVersion // Adjust to your needs
        targetSdkVersion 33 // Adjust to your needs (consider latest supported version)
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

flutter {
    source '../..' // Adjust this path if your Flutter project is located elsewhere
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:32.7.3')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.7.21" // Update Kotlin version to match plugin
     // Update version according to latest documentation
    classpath 'com.android.tools.build:gradle:7.5.1'
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-auth'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.0"
}